using System;
using System.Reflection;
using System.Runtime.InteropServices;
using Kitware.mummy.Runtime;

namespace Kitware.VTK
{
	/// <summary>
	///    vtkQuadRotationalExtrusionFilter
	/// </summary>
	/// <remarks>
	///    sweep polygonal data creating "skirt" from free edges and lines, and lines from vertices
	///
	/// vtkQuadRotationalExtrusionFilter is a modeling filter. It takes polygonal
	/// data as input and generates polygonal data on output. The input dataset
	/// is swept around the z-axis to create new polygonal primitives. These
	/// primitives form a "skirt" or swept surface. For example, sweeping a
	/// line results in a cylindrical shell, and sweeping a circle creates a
	/// torus.
	///
	/// There are a number of control parameters for this filter. You can
	/// control whether the sweep of a 2D object (i.e., polygon or triangle
	/// strip) is capped with the generating geometry via the "Capping" instance
	/// variable. Also, you can control the angle of rotation, and whether
	/// translation along the z-axis is performed along with the rotation.
	/// (Translation is useful for creating "springs".) You also can adjust
	/// the radius of the generating geometry using the "DeltaRotation" instance
	/// variable.
	///
	/// The skirt is generated by locating certain topological features. Free
	/// edges (edges of polygons or triangle strips only used by one polygon or
	/// triangle strips) generate surfaces. This is true also of lines or
	/// polylines. Vertices generate lines.
	///
	/// This filter can be used to model axisymmetric objects like cylinders,
	/// bottles, and wine glasses; or translational/rotational symmetric objects
	/// like springs or corkscrews.
	///
	/// @warning
	/// If the object sweeps 360 degrees, radius does not vary, and the object
	/// does not translate, capping is not performed. This is because the cap
	/// is unnecessary.
	///
	/// @warning
	/// Some polygonal objects have no free edges (e.g., sphere). When swept,
	/// this will result in two separate surfaces if capping is on, or no surface
	/// if capping is off.
	///
	/// </remarks>
	/// <seealso>
	///
	/// vtkLinearExtrusionFilter vtkRotationalExtrusionFilter
	///
	/// @par Thanks:
	/// This class was initially developed by Daniel Aguilera, CEA/DIF
	/// Ported and modified by Philippe Pebay, Kitware, 2011
	/// </seealso>
	// Token: 0x02000568 RID: 1384
	public class vtkQuadRotationalExtrusionFilter : vtkMultiBlockDataSetAlgorithm
	{
		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x0600F4EA RID: 62698 RVA: 0x00154E6B File Offset: 0x0015306B
		static vtkQuadRotationalExtrusionFilter()
		{
			Methods.RegisterType(Assembly.GetExecutingAssembly(), vtkQuadRotationalExtrusionFilter.MRClassNameKey, Type.GetType("Kitware.VTK.vtkQuadRotationalExtrusionFilter"));
		}

		/// <summary>
		/// Automatically generated constructor - called from generated code.
		/// DO NOT call directly.
		/// </summary>
		// Token: 0x0600F4EB RID: 62699 RVA: 0x00154E93 File Offset: 0x00153093
		public vtkQuadRotationalExtrusionFilter(IntPtr rawCppThis, bool callDisposalMethod, bool strong) : base(rawCppThis, callDisposalMethod, strong)
		{
		}

		// Token: 0x0600F4EC RID: 62700
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkQuadRotationalExtrusionFilter_New(ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Create object with capping on, angle of 360 degrees, resolution = 12, and
		/// no translation along z-axis.
		/// vector (0,0,1), and point (0,0,0).
		/// </summary>
		// Token: 0x0600F4ED RID: 62701 RVA: 0x00154EA4 File Offset: 0x001530A4
		public new static vtkQuadRotationalExtrusionFilter New()
		{
			vtkQuadRotationalExtrusionFilter result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_New(ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkQuadRotationalExtrusionFilter)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		/// <summary>
		/// Create object with capping on, angle of 360 degrees, resolution = 12, and
		/// no translation along z-axis.
		/// vector (0,0,1), and point (0,0,0).
		/// </summary>
		// Token: 0x0600F4EE RID: 62702 RVA: 0x00154EF8 File Offset: 0x001530F8
		public vtkQuadRotationalExtrusionFilter() : base(IntPtr.Zero, false, false)
		{
			uint num = 0U;
			uint maxValue = uint.MaxValue;
			uint num2 = 0U;
			IntPtr rawCppThis = vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_New(ref num, ref maxValue, ref num2);
			base.SetCppThis(rawCppThis, true, num != 0U && num2 >= 2U);
		}

		/// <summary>
		/// Automatically generated protected Dispose method - called from
		/// public Dispose or the C# destructor. DO NOT call directly.
		/// </summary>
		// Token: 0x0600F4EF RID: 62703 RVA: 0x00154F3C File Offset: 0x0015313C
		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
		}

		// Token: 0x0600F4F0 RID: 62704
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_AddPerBlockAngle_01(HandleRef pThis, long blockId, double angle);

		/// <summary>
		/// Set/Get angles of rotation for each block in a composite data set.
		/// </summary>
		// Token: 0x0600F4F1 RID: 62705 RVA: 0x00154F47 File Offset: 0x00153147
		public void AddPerBlockAngle(long blockId, double angle)
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_AddPerBlockAngle_01(base.GetCppThis(), blockId, angle);
		}

		// Token: 0x0600F4F2 RID: 62706
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_CappingOff_02(HandleRef pThis);

		/// <summary>
		/// Turn on/off the capping of the skirt.
		/// </summary>
		// Token: 0x0600F4F3 RID: 62707 RVA: 0x00154F58 File Offset: 0x00153158
		public virtual void CappingOff()
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_CappingOff_02(base.GetCppThis());
		}

		// Token: 0x0600F4F4 RID: 62708
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_CappingOn_03(HandleRef pThis);

		/// <summary>
		/// Turn on/off the capping of the skirt.
		/// </summary>
		// Token: 0x0600F4F5 RID: 62709 RVA: 0x00154F67 File Offset: 0x00153167
		public virtual void CappingOn()
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_CappingOn_03(base.GetCppThis());
		}

		// Token: 0x0600F4F6 RID: 62710
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_GetAxis_04(HandleRef pThis);

		/// <summary>
		/// Set the axis of rotation to use. It is set by default to Z.
		/// </summary>
		// Token: 0x0600F4F7 RID: 62711 RVA: 0x00154F78 File Offset: 0x00153178
		public virtual int GetAxis()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetAxis_04(base.GetCppThis());
		}

		// Token: 0x0600F4F8 RID: 62712
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_GetAxisMaxValue_05(HandleRef pThis);

		/// <summary>
		/// Set the axis of rotation to use. It is set by default to Z.
		/// </summary>
		// Token: 0x0600F4F9 RID: 62713 RVA: 0x00154F98 File Offset: 0x00153198
		public virtual int GetAxisMaxValue()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetAxisMaxValue_05(base.GetCppThis());
		}

		// Token: 0x0600F4FA RID: 62714
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_GetAxisMinValue_06(HandleRef pThis);

		/// <summary>
		/// Set the axis of rotation to use. It is set by default to Z.
		/// </summary>
		// Token: 0x0600F4FB RID: 62715 RVA: 0x00154FB8 File Offset: 0x001531B8
		public virtual int GetAxisMinValue()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetAxisMinValue_06(base.GetCppThis());
		}

		// Token: 0x0600F4FC RID: 62716
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_GetCapping_07(HandleRef pThis);

		/// <summary>
		/// Turn on/off the capping of the skirt.
		/// </summary>
		// Token: 0x0600F4FD RID: 62717 RVA: 0x00154FD8 File Offset: 0x001531D8
		public virtual int GetCapping()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetCapping_07(base.GetCppThis());
		}

		// Token: 0x0600F4FE RID: 62718
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern double vtkQuadRotationalExtrusionFilter_GetDefaultAngle_08(HandleRef pThis);

		/// <summary>
		/// Set/Get angle of rotation.
		/// </summary>
		// Token: 0x0600F4FF RID: 62719 RVA: 0x00154FF8 File Offset: 0x001531F8
		public virtual double GetDefaultAngle()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetDefaultAngle_08(base.GetCppThis());
		}

		// Token: 0x0600F500 RID: 62720
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern double vtkQuadRotationalExtrusionFilter_GetDeltaRadius_09(HandleRef pThis);

		/// <summary>
		/// Set/Get change in radius during sweep process.
		/// </summary>
		// Token: 0x0600F501 RID: 62721 RVA: 0x00155018 File Offset: 0x00153218
		public virtual double GetDeltaRadius()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetDeltaRadius_09(base.GetCppThis());
		}

		// Token: 0x0600F502 RID: 62722
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkQuadRotationalExtrusionFilter_GetNumberOfGenerationsFromBase_10(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0600F503 RID: 62723 RVA: 0x00155038 File Offset: 0x00153238
		public override long GetNumberOfGenerationsFromBase(string type)
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetNumberOfGenerationsFromBase_10(base.GetCppThis(), type);
		}

		// Token: 0x0600F504 RID: 62724
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkQuadRotationalExtrusionFilter_GetNumberOfGenerationsFromBaseType_11([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0600F505 RID: 62725 RVA: 0x00155058 File Offset: 0x00153258
		public new static long GetNumberOfGenerationsFromBaseType(string type)
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetNumberOfGenerationsFromBaseType_11(type);
		}

		// Token: 0x0600F506 RID: 62726
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_GetResolution_12(HandleRef pThis);

		/// <summary>
		/// Set/Get resolution of sweep operation. Resolution controls the number
		/// of intermediate node points.
		/// </summary>
		// Token: 0x0600F507 RID: 62727 RVA: 0x00155074 File Offset: 0x00153274
		public virtual int GetResolution()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetResolution_12(base.GetCppThis());
		}

		// Token: 0x0600F508 RID: 62728
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_GetResolutionMaxValue_13(HandleRef pThis);

		/// <summary>
		/// Set/Get resolution of sweep operation. Resolution controls the number
		/// of intermediate node points.
		/// </summary>
		// Token: 0x0600F509 RID: 62729 RVA: 0x00155094 File Offset: 0x00153294
		public virtual int GetResolutionMaxValue()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetResolutionMaxValue_13(base.GetCppThis());
		}

		// Token: 0x0600F50A RID: 62730
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_GetResolutionMinValue_14(HandleRef pThis);

		/// <summary>
		/// Set/Get resolution of sweep operation. Resolution controls the number
		/// of intermediate node points.
		/// </summary>
		// Token: 0x0600F50B RID: 62731 RVA: 0x001550B4 File Offset: 0x001532B4
		public virtual int GetResolutionMinValue()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetResolutionMinValue_14(base.GetCppThis());
		}

		// Token: 0x0600F50C RID: 62732
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern double vtkQuadRotationalExtrusionFilter_GetTranslation_15(HandleRef pThis);

		/// <summary>
		/// Set/Get total amount of translation along the z-axis.
		/// </summary>
		// Token: 0x0600F50D RID: 62733 RVA: 0x001550D4 File Offset: 0x001532D4
		public virtual double GetTranslation()
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_GetTranslation_15(base.GetCppThis());
		}

		// Token: 0x0600F50E RID: 62734
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_IsA_16(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0600F50F RID: 62735 RVA: 0x001550F4 File Offset: 0x001532F4
		public override int IsA(string type)
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_IsA_16(base.GetCppThis(), type);
		}

		// Token: 0x0600F510 RID: 62736
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadRotationalExtrusionFilter_IsTypeOf_17([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0600F511 RID: 62737 RVA: 0x00155114 File Offset: 0x00153314
		public new static int IsTypeOf(string type)
		{
			return vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_IsTypeOf_17(type);
		}

		// Token: 0x0600F512 RID: 62738
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkQuadRotationalExtrusionFilter_NewInstance_19(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0600F513 RID: 62739 RVA: 0x00155130 File Offset: 0x00153330
		public new vtkQuadRotationalExtrusionFilter NewInstance()
		{
			vtkQuadRotationalExtrusionFilter result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_NewInstance_19(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkQuadRotationalExtrusionFilter)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		// Token: 0x0600F514 RID: 62740
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_RemoveAllPerBlockAngles_20(HandleRef pThis);

		/// <summary>
		/// Set/Get angles of rotation for each block in a composite data set.
		/// </summary>
		// Token: 0x0600F515 RID: 62741 RVA: 0x0015518A File Offset: 0x0015338A
		public void RemoveAllPerBlockAngles()
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_RemoveAllPerBlockAngles_20(base.GetCppThis());
		}

		// Token: 0x0600F516 RID: 62742
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkQuadRotationalExtrusionFilter_SafeDownCast_21(HandleRef o, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0600F517 RID: 62743 RVA: 0x0015519C File Offset: 0x0015339C
		public new static vtkQuadRotationalExtrusionFilter SafeDownCast(vtkObjectBase o)
		{
			vtkQuadRotationalExtrusionFilter vtkQuadRotationalExtrusionFilter = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SafeDownCast_21((o == null) ? default(HandleRef) : o.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkQuadRotationalExtrusionFilter = (vtkQuadRotationalExtrusionFilter)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkQuadRotationalExtrusionFilter.Register(null);
				}
			}
			return vtkQuadRotationalExtrusionFilter;
		}

		// Token: 0x0600F518 RID: 62744
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetAxis_22(HandleRef pThis, int _arg);

		/// <summary>
		/// Set the axis of rotation to use. It is set by default to Z.
		/// </summary>
		// Token: 0x0600F519 RID: 62745 RVA: 0x0015521B File Offset: 0x0015341B
		public virtual void SetAxis(int _arg)
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetAxis_22(base.GetCppThis(), _arg);
		}

		// Token: 0x0600F51A RID: 62746
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetAxisToX_23(HandleRef pThis);

		/// <summary>
		/// Set the axis of rotation to use. It is set by default to Z.
		/// </summary>
		// Token: 0x0600F51B RID: 62747 RVA: 0x0015522B File Offset: 0x0015342B
		public void SetAxisToX()
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetAxisToX_23(base.GetCppThis());
		}

		// Token: 0x0600F51C RID: 62748
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetAxisToY_24(HandleRef pThis);

		/// <summary>
		/// Set the axis of rotation to use. It is set by default to Z.
		/// </summary>
		// Token: 0x0600F51D RID: 62749 RVA: 0x0015523A File Offset: 0x0015343A
		public void SetAxisToY()
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetAxisToY_24(base.GetCppThis());
		}

		// Token: 0x0600F51E RID: 62750
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetAxisToZ_25(HandleRef pThis);

		/// <summary>
		/// Set the axis of rotation to use. It is set by default to Z.
		/// </summary>
		// Token: 0x0600F51F RID: 62751 RVA: 0x00155249 File Offset: 0x00153449
		public void SetAxisToZ()
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetAxisToZ_25(base.GetCppThis());
		}

		// Token: 0x0600F520 RID: 62752
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetCapping_26(HandleRef pThis, int _arg);

		/// <summary>
		/// Turn on/off the capping of the skirt.
		/// </summary>
		// Token: 0x0600F521 RID: 62753 RVA: 0x00155258 File Offset: 0x00153458
		public virtual void SetCapping(int _arg)
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetCapping_26(base.GetCppThis(), _arg);
		}

		// Token: 0x0600F522 RID: 62754
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetDefaultAngle_27(HandleRef pThis, double _arg);

		/// <summary>
		/// Set/Get angle of rotation.
		/// </summary>
		// Token: 0x0600F523 RID: 62755 RVA: 0x00155268 File Offset: 0x00153468
		public virtual void SetDefaultAngle(double _arg)
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetDefaultAngle_27(base.GetCppThis(), _arg);
		}

		// Token: 0x0600F524 RID: 62756
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetDeltaRadius_28(HandleRef pThis, double _arg);

		/// <summary>
		/// Set/Get change in radius during sweep process.
		/// </summary>
		// Token: 0x0600F525 RID: 62757 RVA: 0x00155278 File Offset: 0x00153478
		public virtual void SetDeltaRadius(double _arg)
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetDeltaRadius_28(base.GetCppThis(), _arg);
		}

		// Token: 0x0600F526 RID: 62758
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetResolution_29(HandleRef pThis, int _arg);

		/// <summary>
		/// Set/Get resolution of sweep operation. Resolution controls the number
		/// of intermediate node points.
		/// </summary>
		// Token: 0x0600F527 RID: 62759 RVA: 0x00155288 File Offset: 0x00153488
		public virtual void SetResolution(int _arg)
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetResolution_29(base.GetCppThis(), _arg);
		}

		// Token: 0x0600F528 RID: 62760
		[DllImport("Kitware.VTK.FiltersModeling.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkQuadRotationalExtrusionFilter_SetTranslation_30(HandleRef pThis, double _arg);

		/// <summary>
		/// Set/Get total amount of translation along the z-axis.
		/// </summary>
		// Token: 0x0600F529 RID: 62761 RVA: 0x00155298 File Offset: 0x00153498
		public virtual void SetTranslation(double _arg)
		{
			vtkQuadRotationalExtrusionFilter.vtkQuadRotationalExtrusionFilter_SetTranslation_30(base.GetCppThis(), _arg);
		}

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x040011DF RID: 4575
		public new const string MRFullTypeName = "Kitware.VTK.vtkQuadRotationalExtrusionFilter";

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x040011E0 RID: 4576
		public new static readonly string MRClassNameKey = "class vtkQuadRotationalExtrusionFilter";

		/// <summary>
		/// Create object with capping on, angle of 360 degrees, resolution = 12, and
		/// no translation along z-axis.
		/// vector (0,0,1), and point (0,0,0).
		/// </summary>
		// Token: 0x02000569 RID: 1385
		public enum RotationAxis
		{
			/// <summary>enum member</summary>
			// Token: 0x040011E2 RID: 4578
			USE_X,
			/// <summary>enum member</summary>
			// Token: 0x040011E3 RID: 4579
			USE_Y,
			/// <summary>enum member</summary>
			// Token: 0x040011E4 RID: 4580
			USE_Z
		}
	}
}
