using System;
using System.Reflection;
using System.Runtime.InteropServices;
using Kitware.mummy.Runtime;

namespace Kitware.VTK
{
	/// <summary>
	///    vtkAffineRepresentation2D
	/// </summary>
	/// <remarks>
	///    represent 2D affine transformations
	///
	/// This class is used to represent a vtkAffineWidget. This representation
	/// consists of three parts: a box, a circle, and a cross. The box is used for
	/// scaling and shearing, the circle for rotation, and the cross for
	/// translation. These parts are drawn in the overlay plane and maintain a
	/// constant size (width and height) specified in terms of normalized viewport
	/// coordinates.
	///
	/// The representation maintains an internal transformation matrix (see
	/// superclass' GetTransform() method). The transformations generated by this
	/// widget assume that the representation lies in the x-y plane. If this is
	/// not the case, the user is responsible for transforming this
	/// representation's matrix into the correct coordinate space (by judicious
	/// matrix multiplication). Note that the transformation matrix returned by
	/// GetTransform() is relative to the last PlaceWidget() invocation. (The
	/// PlaceWidget() sets the origin around which rotation and scaling occurs;
	/// the origin is the center point of the bounding box provided.)
	///
	///
	/// </remarks>
	/// <seealso>
	///
	/// vtkAffineRepresentation vtkAffineWidget
	/// </seealso>
	// Token: 0x020002B5 RID: 693
	public class vtkAffineRepresentation2D : vtkAffineRepresentation
	{
		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x06007D3E RID: 32062 RVA: 0x000B3DE3 File Offset: 0x000B1FE3
		static vtkAffineRepresentation2D()
		{
			Methods.RegisterType(Assembly.GetExecutingAssembly(), vtkAffineRepresentation2D.MRClassNameKey, Type.GetType("Kitware.VTK.vtkAffineRepresentation2D"));
		}

		/// <summary>
		/// Automatically generated constructor - called from generated code.
		/// DO NOT call directly.
		/// </summary>
		// Token: 0x06007D3F RID: 32063 RVA: 0x000B3E0B File Offset: 0x000B200B
		public vtkAffineRepresentation2D(IntPtr rawCppThis, bool callDisposalMethod, bool strong) : base(rawCppThis, callDisposalMethod, strong)
		{
		}

		// Token: 0x06007D40 RID: 32064
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkAffineRepresentation2D_New(ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Instantiate this class.
		/// </summary>
		// Token: 0x06007D41 RID: 32065 RVA: 0x000B3E1C File Offset: 0x000B201C
		public new static vtkAffineRepresentation2D New()
		{
			vtkAffineRepresentation2D result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkAffineRepresentation2D.vtkAffineRepresentation2D_New(ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkAffineRepresentation2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		/// <summary>
		/// Instantiate this class.
		/// </summary>
		// Token: 0x06007D42 RID: 32066 RVA: 0x000B3E70 File Offset: 0x000B2070
		public vtkAffineRepresentation2D() : base(IntPtr.Zero, false, false)
		{
			uint num = 0U;
			uint maxValue = uint.MaxValue;
			uint num2 = 0U;
			IntPtr rawCppThis = vtkAffineRepresentation2D.vtkAffineRepresentation2D_New(ref num, ref maxValue, ref num2);
			base.SetCppThis(rawCppThis, true, num != 0U && num2 >= 2U);
		}

		/// <summary>
		/// Automatically generated protected Dispose method - called from
		/// public Dispose or the C# destructor. DO NOT call directly.
		/// </summary>
		// Token: 0x06007D43 RID: 32067 RVA: 0x000B3EB4 File Offset: 0x000B20B4
		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
		}

		// Token: 0x06007D44 RID: 32068
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_BuildRepresentation_01(HandleRef pThis);

		/// <summary>
		/// Subclasses of vtkAffineRepresentation2D must implement these methods. These
		/// are the methods that the widget and its representation use to
		/// communicate with each other. Note: PlaceWidget() reinitializes the
		/// transformation matrix (i.e., sets it to identity). It also sets the
		/// origin for scaling and rotation.
		/// </summary>
		// Token: 0x06007D45 RID: 32069 RVA: 0x000B3EBF File Offset: 0x000B20BF
		public override void BuildRepresentation()
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_BuildRepresentation_01(base.GetCppThis());
		}

		// Token: 0x06007D46 RID: 32070
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_ComputeInteractionState_02(HandleRef pThis, int X, int Y, int modify);

		/// <summary>
		/// Subclasses of vtkAffineRepresentation2D must implement these methods. These
		/// are the methods that the widget and its representation use to
		/// communicate with each other. Note: PlaceWidget() reinitializes the
		/// transformation matrix (i.e., sets it to identity). It also sets the
		/// origin for scaling and rotation.
		/// </summary>
		// Token: 0x06007D47 RID: 32071 RVA: 0x000B3ED0 File Offset: 0x000B20D0
		public override int ComputeInteractionState(int X, int Y, int modify)
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_ComputeInteractionState_02(base.GetCppThis(), X, Y, modify);
		}

		// Token: 0x06007D48 RID: 32072
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_DisplayTextOff_03(HandleRef pThis);

		/// <summary>
		/// Enable the display of text with numeric values characterizing the
		/// transformation. Rotation and shear are expressed in degrees; translation
		/// the distance in world coordinates; and scale normalized (sx,sy) values.
		/// </summary>
		// Token: 0x06007D49 RID: 32073 RVA: 0x000B3EF2 File Offset: 0x000B20F2
		public virtual void DisplayTextOff()
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_DisplayTextOff_03(base.GetCppThis());
		}

		// Token: 0x06007D4A RID: 32074
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_DisplayTextOn_04(HandleRef pThis);

		/// <summary>
		/// Enable the display of text with numeric values characterizing the
		/// transformation. Rotation and shear are expressed in degrees; translation
		/// the distance in world coordinates; and scale normalized (sx,sy) values.
		/// </summary>
		// Token: 0x06007D4B RID: 32075 RVA: 0x000B3F01 File Offset: 0x000B2101
		public virtual void DisplayTextOn()
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_DisplayTextOn_04(base.GetCppThis());
		}

		// Token: 0x06007D4C RID: 32076
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_EndWidgetInteraction_05(HandleRef pThis, IntPtr eventPos);

		/// <summary>
		/// Subclasses of vtkAffineRepresentation2D must implement these methods. These
		/// are the methods that the widget and its representation use to
		/// communicate with each other. Note: PlaceWidget() reinitializes the
		/// transformation matrix (i.e., sets it to identity). It also sets the
		/// origin for scaling and rotation.
		/// </summary>
		// Token: 0x06007D4D RID: 32077 RVA: 0x000B3F10 File Offset: 0x000B2110
		public override void EndWidgetInteraction(IntPtr eventPos)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_EndWidgetInteraction_05(base.GetCppThis(), eventPos);
		}

		// Token: 0x06007D4E RID: 32078
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_GetActors2D_06(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06007D4F RID: 32079 RVA: 0x000B3F20 File Offset: 0x000B2120
		public override void GetActors2D(vtkPropCollection arg0)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetActors2D_06(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06007D50 RID: 32080
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetAxesWidth_07(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D51 RID: 32081 RVA: 0x000B3F50 File Offset: 0x000B2150
		public virtual int GetAxesWidth()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetAxesWidth_07(base.GetCppThis());
		}

		// Token: 0x06007D52 RID: 32082
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetAxesWidthMaxValue_08(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D53 RID: 32083 RVA: 0x000B3F70 File Offset: 0x000B2170
		public virtual int GetAxesWidthMaxValue()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetAxesWidthMaxValue_08(base.GetCppThis());
		}

		// Token: 0x06007D54 RID: 32084
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetAxesWidthMinValue_09(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D55 RID: 32085 RVA: 0x000B3F90 File Offset: 0x000B2190
		public virtual int GetAxesWidthMinValue()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetAxesWidthMinValue_09(base.GetCppThis());
		}

		// Token: 0x06007D56 RID: 32086
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetBoxWidth_10(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D57 RID: 32087 RVA: 0x000B3FB0 File Offset: 0x000B21B0
		public virtual int GetBoxWidth()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetBoxWidth_10(base.GetCppThis());
		}

		// Token: 0x06007D58 RID: 32088
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetBoxWidthMaxValue_11(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D59 RID: 32089 RVA: 0x000B3FD0 File Offset: 0x000B21D0
		public virtual int GetBoxWidthMaxValue()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetBoxWidthMaxValue_11(base.GetCppThis());
		}

		// Token: 0x06007D5A RID: 32090
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetBoxWidthMinValue_12(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D5B RID: 32091 RVA: 0x000B3FF0 File Offset: 0x000B21F0
		public virtual int GetBoxWidthMinValue()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetBoxWidthMinValue_12(base.GetCppThis());
		}

		// Token: 0x06007D5C RID: 32092
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetCircleWidth_13(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D5D RID: 32093 RVA: 0x000B4010 File Offset: 0x000B2210
		public virtual int GetCircleWidth()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetCircleWidth_13(base.GetCppThis());
		}

		// Token: 0x06007D5E RID: 32094
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetCircleWidthMaxValue_14(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D5F RID: 32095 RVA: 0x000B4030 File Offset: 0x000B2230
		public virtual int GetCircleWidthMaxValue()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetCircleWidthMaxValue_14(base.GetCppThis());
		}

		// Token: 0x06007D60 RID: 32096
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetCircleWidthMinValue_15(HandleRef pThis);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D61 RID: 32097 RVA: 0x000B4050 File Offset: 0x000B2250
		public virtual int GetCircleWidthMinValue()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetCircleWidthMinValue_15(base.GetCppThis());
		}

		// Token: 0x06007D62 RID: 32098
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_GetDisplayText_16(HandleRef pThis);

		/// <summary>
		/// Enable the display of text with numeric values characterizing the
		/// transformation. Rotation and shear are expressed in degrees; translation
		/// the distance in world coordinates; and scale normalized (sx,sy) values.
		/// </summary>
		// Token: 0x06007D63 RID: 32099 RVA: 0x000B4070 File Offset: 0x000B2270
		public virtual int GetDisplayText()
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetDisplayText_16(base.GetCppThis());
		}

		// Token: 0x06007D64 RID: 32100
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkAffineRepresentation2D_GetNumberOfGenerationsFromBase_17(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06007D65 RID: 32101 RVA: 0x000B4090 File Offset: 0x000B2290
		public override long GetNumberOfGenerationsFromBase(string type)
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetNumberOfGenerationsFromBase_17(base.GetCppThis(), type);
		}

		// Token: 0x06007D66 RID: 32102
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkAffineRepresentation2D_GetNumberOfGenerationsFromBaseType_18([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06007D67 RID: 32103 RVA: 0x000B40B0 File Offset: 0x000B22B0
		public new static long GetNumberOfGenerationsFromBaseType(string type)
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetNumberOfGenerationsFromBaseType_18(type);
		}

		// Token: 0x06007D68 RID: 32104
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkAffineRepresentation2D_GetOrigin_19(HandleRef pThis);

		/// <summary>
		/// Specify the origin of the widget (in world coordinates). The origin
		/// is the point where the widget places itself. Note that rotations and
		/// scaling occurs around the origin.
		/// </summary>
		// Token: 0x06007D69 RID: 32105 RVA: 0x000B40CC File Offset: 0x000B22CC
		public virtual double[] GetOrigin()
		{
			IntPtr intPtr = vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetOrigin_19(base.GetCppThis());
			double[] array = null;
			if (IntPtr.Zero != intPtr)
			{
				array = new double[3];
				Marshal.Copy(intPtr, array, 0, array.Length);
			}
			return array;
		}

		// Token: 0x06007D6A RID: 32106
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_GetOrigin_20(HandleRef pThis, ref double _arg1, ref double _arg2, ref double _arg3);

		/// <summary>
		/// Specify the origin of the widget (in world coordinates). The origin
		/// is the point where the widget places itself. Note that rotations and
		/// scaling occurs around the origin.
		/// </summary>
		// Token: 0x06007D6B RID: 32107 RVA: 0x000B4114 File Offset: 0x000B2314
		public virtual void GetOrigin(ref double _arg1, ref double _arg2, ref double _arg3)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetOrigin_20(base.GetCppThis(), ref _arg1, ref _arg2, ref _arg3);
		}

		// Token: 0x06007D6C RID: 32108
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_GetOrigin_21(HandleRef pThis, IntPtr _arg);

		/// <summary>
		/// Specify the origin of the widget (in world coordinates). The origin
		/// is the point where the widget places itself. Note that rotations and
		/// scaling occurs around the origin.
		/// </summary>
		// Token: 0x06007D6D RID: 32109 RVA: 0x000B4126 File Offset: 0x000B2326
		public virtual void GetOrigin(IntPtr _arg)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetOrigin_21(base.GetCppThis(), _arg);
		}

		// Token: 0x06007D6E RID: 32110
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkAffineRepresentation2D_GetProperty_22(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Set/Get the properties when unselected and selected.
		/// </summary>
		// Token: 0x06007D6F RID: 32111 RVA: 0x000B4138 File Offset: 0x000B2338
		public virtual vtkProperty2D GetProperty()
		{
			vtkProperty2D vtkProperty2D = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetProperty_22(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkProperty2D = (vtkProperty2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkProperty2D.Register(null);
				}
			}
			return vtkProperty2D;
		}

		// Token: 0x06007D70 RID: 32112
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkAffineRepresentation2D_GetSelectedProperty_23(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Set/Get the properties when unselected and selected.
		/// </summary>
		// Token: 0x06007D71 RID: 32113 RVA: 0x000B41A8 File Offset: 0x000B23A8
		public virtual vtkProperty2D GetSelectedProperty()
		{
			vtkProperty2D vtkProperty2D = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetSelectedProperty_23(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkProperty2D = (vtkProperty2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkProperty2D.Register(null);
				}
			}
			return vtkProperty2D;
		}

		// Token: 0x06007D72 RID: 32114
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkAffineRepresentation2D_GetTextProperty_24(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Set/Get the properties when unselected and selected.
		/// </summary>
		// Token: 0x06007D73 RID: 32115 RVA: 0x000B4218 File Offset: 0x000B2418
		public virtual vtkTextProperty GetTextProperty()
		{
			vtkTextProperty vtkTextProperty = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetTextProperty_24(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkTextProperty = (vtkTextProperty)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkTextProperty.Register(null);
				}
			}
			return vtkTextProperty;
		}

		// Token: 0x06007D74 RID: 32116
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_GetTransform_25(HandleRef pThis, HandleRef t);

		/// <summary>
		/// Retrieve a linear transform characterizing the affine transformation
		/// generated by this widget. This method copies its internal transform into
		/// the transform provided. Note that the PlaceWidget() method initializes
		/// the internal matrix to identity. All subsequent widget operations (i.e.,
		/// scale, translate, rotate, shear) are concatenated with the internal
		/// transform.
		/// </summary>
		// Token: 0x06007D75 RID: 32117 RVA: 0x000B4288 File Offset: 0x000B2488
		public override void GetTransform(vtkTransform t)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_GetTransform_25(base.GetCppThis(), (t == null) ? default(HandleRef) : t.GetCppThis());
		}

		// Token: 0x06007D76 RID: 32118
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_IsA_26(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06007D77 RID: 32119 RVA: 0x000B42B8 File Offset: 0x000B24B8
		public override int IsA(string type)
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_IsA_26(base.GetCppThis(), type);
		}

		// Token: 0x06007D78 RID: 32120
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_IsTypeOf_27([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06007D79 RID: 32121 RVA: 0x000B42D8 File Offset: 0x000B24D8
		public new static int IsTypeOf(string type)
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_IsTypeOf_27(type);
		}

		// Token: 0x06007D7A RID: 32122
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkAffineRepresentation2D_NewInstance_29(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06007D7B RID: 32123 RVA: 0x000B42F4 File Offset: 0x000B24F4
		public new vtkAffineRepresentation2D NewInstance()
		{
			vtkAffineRepresentation2D result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkAffineRepresentation2D.vtkAffineRepresentation2D_NewInstance_29(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkAffineRepresentation2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		// Token: 0x06007D7C RID: 32124
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_PlaceWidget_30(HandleRef pThis, IntPtr bounds);

		/// <summary>
		/// Subclasses of vtkAffineRepresentation2D must implement these methods. These
		/// are the methods that the widget and its representation use to
		/// communicate with each other. Note: PlaceWidget() reinitializes the
		/// transformation matrix (i.e., sets it to identity). It also sets the
		/// origin for scaling and rotation.
		/// </summary>
		// Token: 0x06007D7D RID: 32125 RVA: 0x000B434E File Offset: 0x000B254E
		public override void PlaceWidget(IntPtr bounds)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_PlaceWidget_30(base.GetCppThis(), bounds);
		}

		// Token: 0x06007D7E RID: 32126
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_ReleaseGraphicsResources_31(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06007D7F RID: 32127 RVA: 0x000B4360 File Offset: 0x000B2560
		public override void ReleaseGraphicsResources(vtkWindow arg0)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_ReleaseGraphicsResources_31(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06007D80 RID: 32128
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkAffineRepresentation2D_RenderOverlay_32(HandleRef pThis, HandleRef viewport);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06007D81 RID: 32129 RVA: 0x000B4390 File Offset: 0x000B2590
		public override int RenderOverlay(vtkViewport viewport)
		{
			return vtkAffineRepresentation2D.vtkAffineRepresentation2D_RenderOverlay_32(base.GetCppThis(), (viewport == null) ? default(HandleRef) : viewport.GetCppThis());
		}

		// Token: 0x06007D82 RID: 32130
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkAffineRepresentation2D_SafeDownCast_33(HandleRef o, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06007D83 RID: 32131 RVA: 0x000B43C4 File Offset: 0x000B25C4
		public new static vtkAffineRepresentation2D SafeDownCast(vtkObjectBase o)
		{
			vtkAffineRepresentation2D vtkAffineRepresentation2D = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkAffineRepresentation2D.vtkAffineRepresentation2D_SafeDownCast_33((o == null) ? default(HandleRef) : o.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkAffineRepresentation2D = (vtkAffineRepresentation2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkAffineRepresentation2D.Register(null);
				}
			}
			return vtkAffineRepresentation2D;
		}

		// Token: 0x06007D84 RID: 32132
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetAxesWidth_34(HandleRef pThis, int _arg);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D85 RID: 32133 RVA: 0x000B4443 File Offset: 0x000B2643
		public virtual void SetAxesWidth(int _arg)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetAxesWidth_34(base.GetCppThis(), _arg);
		}

		// Token: 0x06007D86 RID: 32134
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetBoxWidth_35(HandleRef pThis, int _arg);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D87 RID: 32135 RVA: 0x000B4453 File Offset: 0x000B2653
		public virtual void SetBoxWidth(int _arg)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetBoxWidth_35(base.GetCppThis(), _arg);
		}

		// Token: 0x06007D88 RID: 32136
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetCircleWidth_36(HandleRef pThis, int _arg);

		/// <summary>
		/// Specify the width of the various parts of the representation (in
		/// pixels).  The three parts are of the representation are the translation
		/// axes, the rotation circle, and the scale/shear box. Note that since the
		/// widget resizes itself so that the width and height are always the
		/// same, only the width needs to be specified.
		/// </summary>
		// Token: 0x06007D89 RID: 32137 RVA: 0x000B4463 File Offset: 0x000B2663
		public virtual void SetCircleWidth(int _arg)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetCircleWidth_36(base.GetCppThis(), _arg);
		}

		// Token: 0x06007D8A RID: 32138
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetDisplayText_37(HandleRef pThis, int _arg);

		/// <summary>
		/// Enable the display of text with numeric values characterizing the
		/// transformation. Rotation and shear are expressed in degrees; translation
		/// the distance in world coordinates; and scale normalized (sx,sy) values.
		/// </summary>
		// Token: 0x06007D8B RID: 32139 RVA: 0x000B4473 File Offset: 0x000B2673
		public virtual void SetDisplayText(int _arg)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetDisplayText_37(base.GetCppThis(), _arg);
		}

		// Token: 0x06007D8C RID: 32140
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetOrigin_38(HandleRef pThis, IntPtr o);

		/// <summary>
		/// Specify the origin of the widget (in world coordinates). The origin
		/// is the point where the widget places itself. Note that rotations and
		/// scaling occurs around the origin.
		/// </summary>
		// Token: 0x06007D8D RID: 32141 RVA: 0x000B4483 File Offset: 0x000B2683
		public void SetOrigin(IntPtr o)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetOrigin_38(base.GetCppThis(), o);
		}

		// Token: 0x06007D8E RID: 32142
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetOrigin_39(HandleRef pThis, double ox, double oy, double oz);

		/// <summary>
		/// Specify the origin of the widget (in world coordinates). The origin
		/// is the point where the widget places itself. Note that rotations and
		/// scaling occurs around the origin.
		/// </summary>
		// Token: 0x06007D8F RID: 32143 RVA: 0x000B4493 File Offset: 0x000B2693
		public void SetOrigin(double ox, double oy, double oz)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetOrigin_39(base.GetCppThis(), ox, oy, oz);
		}

		// Token: 0x06007D90 RID: 32144
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetProperty_40(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Set/Get the properties when unselected and selected.
		/// </summary>
		// Token: 0x06007D91 RID: 32145 RVA: 0x000B44A8 File Offset: 0x000B26A8
		public void SetProperty(vtkProperty2D arg0)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetProperty_40(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06007D92 RID: 32146
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetSelectedProperty_41(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Set/Get the properties when unselected and selected.
		/// </summary>
		// Token: 0x06007D93 RID: 32147 RVA: 0x000B44D8 File Offset: 0x000B26D8
		public void SetSelectedProperty(vtkProperty2D arg0)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetSelectedProperty_41(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06007D94 RID: 32148
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_SetTextProperty_42(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Set/Get the properties when unselected and selected.
		/// </summary>
		// Token: 0x06007D95 RID: 32149 RVA: 0x000B4508 File Offset: 0x000B2708
		public void SetTextProperty(vtkTextProperty arg0)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_SetTextProperty_42(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06007D96 RID: 32150
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_ShallowCopy_43(HandleRef pThis, HandleRef prop);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06007D97 RID: 32151 RVA: 0x000B4538 File Offset: 0x000B2738
		public override void ShallowCopy(vtkProp prop)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_ShallowCopy_43(base.GetCppThis(), (prop == null) ? default(HandleRef) : prop.GetCppThis());
		}

		// Token: 0x06007D98 RID: 32152
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_StartWidgetInteraction_44(HandleRef pThis, IntPtr eventPos);

		/// <summary>
		/// Subclasses of vtkAffineRepresentation2D must implement these methods. These
		/// are the methods that the widget and its representation use to
		/// communicate with each other. Note: PlaceWidget() reinitializes the
		/// transformation matrix (i.e., sets it to identity). It also sets the
		/// origin for scaling and rotation.
		/// </summary>
		// Token: 0x06007D99 RID: 32153 RVA: 0x000B4567 File Offset: 0x000B2767
		public override void StartWidgetInteraction(IntPtr eventPos)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_StartWidgetInteraction_44(base.GetCppThis(), eventPos);
		}

		// Token: 0x06007D9A RID: 32154
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkAffineRepresentation2D_WidgetInteraction_45(HandleRef pThis, IntPtr eventPos);

		/// <summary>
		/// Subclasses of vtkAffineRepresentation2D must implement these methods. These
		/// are the methods that the widget and its representation use to
		/// communicate with each other. Note: PlaceWidget() reinitializes the
		/// transformation matrix (i.e., sets it to identity). It also sets the
		/// origin for scaling and rotation.
		/// </summary>
		// Token: 0x06007D9B RID: 32155 RVA: 0x000B4577 File Offset: 0x000B2777
		public override void WidgetInteraction(IntPtr eventPos)
		{
			vtkAffineRepresentation2D.vtkAffineRepresentation2D_WidgetInteraction_45(base.GetCppThis(), eventPos);
		}

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x04000A9B RID: 2715
		public new const string MRFullTypeName = "Kitware.VTK.vtkAffineRepresentation2D";

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x04000A9C RID: 2716
		public new static readonly string MRClassNameKey = "class vtkAffineRepresentation2D";
	}
}
