using System;
using System.Reflection;
using System.Runtime.InteropServices;
using Kitware.mummy.Runtime;

namespace Kitware.VTK
{
	/// <summary>
	///    vtkQuadraturePointsGenerator
	///
	///
	/// Create a vtkPolyData on its output containing the vertices
	/// for the quadrature points for one of the vtkDataArrays present
	/// on its input vtkUnstructuredGrid. If the input data set has
	/// has FieldData generated by vtkQuadraturePointInterpolator then
	/// this will be set as point data. Note: Point sets are generated
	/// per field array. This is because each field array may contain
	/// its own dictionary.
	///
	/// </summary>
	/// <seealso>
	///
	/// vtkQuadraturePointInterpolator, vtkQuadratureSchemeDefinition,
	/// vtkInformationQuadratureSchemeDefinitionVectorKey
	/// </seealso>
	// Token: 0x020008CF RID: 2255
	public class vtkQuadraturePointsGenerator : vtkPolyDataAlgorithm
	{
		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x06017495 RID: 95381 RVA: 0x0020B487 File Offset: 0x00209687
		static vtkQuadraturePointsGenerator()
		{
			Methods.RegisterType(Assembly.GetExecutingAssembly(), vtkQuadraturePointsGenerator.MRClassNameKey, Type.GetType("Kitware.VTK.vtkQuadraturePointsGenerator"));
		}

		/// <summary>
		/// Automatically generated constructor - called from generated code.
		/// DO NOT call directly.
		/// </summary>
		// Token: 0x06017496 RID: 95382 RVA: 0x0020B4AF File Offset: 0x002096AF
		public vtkQuadraturePointsGenerator(IntPtr rawCppThis, bool callDisposalMethod, bool strong) : base(rawCppThis, callDisposalMethod, strong)
		{
		}

		// Token: 0x06017497 RID: 95383
		[DllImport("Kitware.VTK.FiltersGeneral.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkQuadraturePointsGenerator_New(ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x06017498 RID: 95384 RVA: 0x0020B4C0 File Offset: 0x002096C0
		public new static vtkQuadraturePointsGenerator New()
		{
			vtkQuadraturePointsGenerator result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_New(ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkQuadraturePointsGenerator)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x06017499 RID: 95385 RVA: 0x0020B514 File Offset: 0x00209714
		public vtkQuadraturePointsGenerator() : base(IntPtr.Zero, false, false)
		{
			uint num = 0U;
			uint maxValue = uint.MaxValue;
			uint num2 = 0U;
			IntPtr rawCppThis = vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_New(ref num, ref maxValue, ref num2);
			base.SetCppThis(rawCppThis, true, num != 0U && num2 >= 2U);
		}

		/// <summary>
		/// Automatically generated protected Dispose method - called from
		/// public Dispose or the C# destructor. DO NOT call directly.
		/// </summary>
		// Token: 0x0601749A RID: 95386 RVA: 0x0020B558 File Offset: 0x00209758
		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
		}

		// Token: 0x0601749B RID: 95387
		[DllImport("Kitware.VTK.FiltersGeneral.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkQuadraturePointsGenerator_GetNumberOfGenerationsFromBase_01(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0601749C RID: 95388 RVA: 0x0020B564 File Offset: 0x00209764
		public override long GetNumberOfGenerationsFromBase(string type)
		{
			return vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_GetNumberOfGenerationsFromBase_01(base.GetCppThis(), type);
		}

		// Token: 0x0601749D RID: 95389
		[DllImport("Kitware.VTK.FiltersGeneral.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkQuadraturePointsGenerator_GetNumberOfGenerationsFromBaseType_02([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x0601749E RID: 95390 RVA: 0x0020B584 File Offset: 0x00209784
		public new static long GetNumberOfGenerationsFromBaseType(string type)
		{
			return vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_GetNumberOfGenerationsFromBaseType_02(type);
		}

		// Token: 0x0601749F RID: 95391
		[DllImport("Kitware.VTK.FiltersGeneral.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadraturePointsGenerator_IsA_03(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x060174A0 RID: 95392 RVA: 0x0020B5A0 File Offset: 0x002097A0
		public override int IsA(string type)
		{
			return vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_IsA_03(base.GetCppThis(), type);
		}

		// Token: 0x060174A1 RID: 95393
		[DllImport("Kitware.VTK.FiltersGeneral.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkQuadraturePointsGenerator_IsTypeOf_04([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x060174A2 RID: 95394 RVA: 0x0020B5C0 File Offset: 0x002097C0
		public new static int IsTypeOf(string type)
		{
			return vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_IsTypeOf_04(type);
		}

		// Token: 0x060174A3 RID: 95395
		[DllImport("Kitware.VTK.FiltersGeneral.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkQuadraturePointsGenerator_NewInstance_06(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x060174A4 RID: 95396 RVA: 0x0020B5DC File Offset: 0x002097DC
		public new vtkQuadraturePointsGenerator NewInstance()
		{
			vtkQuadraturePointsGenerator result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_NewInstance_06(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkQuadraturePointsGenerator)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		// Token: 0x060174A5 RID: 95397
		[DllImport("Kitware.VTK.FiltersGeneral.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkQuadraturePointsGenerator_SafeDownCast_07(HandleRef o, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		///             Undocumented Block
		/// </summary>
		// Token: 0x060174A6 RID: 95398 RVA: 0x0020B638 File Offset: 0x00209838
		public new static vtkQuadraturePointsGenerator SafeDownCast(vtkObjectBase o)
		{
			vtkQuadraturePointsGenerator vtkQuadraturePointsGenerator = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkQuadraturePointsGenerator.vtkQuadraturePointsGenerator_SafeDownCast_07((o == null) ? default(HandleRef) : o.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkQuadraturePointsGenerator = (vtkQuadraturePointsGenerator)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkQuadraturePointsGenerator.Register(null);
				}
			}
			return vtkQuadraturePointsGenerator;
		}

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x04001A11 RID: 6673
		public new const string MRFullTypeName = "Kitware.VTK.vtkQuadraturePointsGenerator";

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x04001A12 RID: 6674
		public new static readonly string MRClassNameKey = "class vtkQuadraturePointsGenerator";
	}
}
