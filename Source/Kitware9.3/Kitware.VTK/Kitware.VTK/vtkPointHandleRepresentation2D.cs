using System;
using System.Reflection;
using System.Runtime.InteropServices;
using Kitware.mummy.Runtime;

namespace Kitware.VTK
{
	/// <summary>
	///    vtkPointHandleRepresentation2D
	/// </summary>
	/// <remarks>
	///    represent the position of a point in display coordinates
	///
	/// This class is used to represent a vtkHandleWidget. It represents a
	/// position in 2D world coordinates using a x-y cursor (the cursor defined by
	/// an instance of vtkPolyData and generated by a vtkPolyDataAlgorithm).
	///
	/// </remarks>
	/// <seealso>
	///
	/// vtkHandleRepresentation vtkHandleWidget
	/// </seealso>
	// Token: 0x02000353 RID: 851
	public class vtkPointHandleRepresentation2D : vtkHandleRepresentation
	{
		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x06009A87 RID: 39559 RVA: 0x000DAFEF File Offset: 0x000D91EF
		static vtkPointHandleRepresentation2D()
		{
			Methods.RegisterType(Assembly.GetExecutingAssembly(), vtkPointHandleRepresentation2D.MRClassNameKey, Type.GetType("Kitware.VTK.vtkPointHandleRepresentation2D"));
		}

		/// <summary>
		/// Automatically generated constructor - called from generated code.
		/// DO NOT call directly.
		/// </summary>
		// Token: 0x06009A88 RID: 39560 RVA: 0x000DB017 File Offset: 0x000D9217
		public vtkPointHandleRepresentation2D(IntPtr rawCppThis, bool callDisposalMethod, bool strong) : base(rawCppThis, callDisposalMethod, strong)
		{
		}

		// Token: 0x06009A89 RID: 39561
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkPointHandleRepresentation2D_New(ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Instantiate this class.
		/// </summary>
		// Token: 0x06009A8A RID: 39562 RVA: 0x000DB028 File Offset: 0x000D9228
		public new static vtkPointHandleRepresentation2D New()
		{
			vtkPointHandleRepresentation2D result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_New(ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkPointHandleRepresentation2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		/// <summary>
		/// Instantiate this class.
		/// </summary>
		// Token: 0x06009A8B RID: 39563 RVA: 0x000DB07C File Offset: 0x000D927C
		public vtkPointHandleRepresentation2D() : base(IntPtr.Zero, false, false)
		{
			uint num = 0U;
			uint maxValue = uint.MaxValue;
			uint num2 = 0U;
			IntPtr rawCppThis = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_New(ref num, ref maxValue, ref num2);
			base.SetCppThis(rawCppThis, true, num != 0U && num2 >= 2U);
		}

		/// <summary>
		/// Automatically generated protected Dispose method - called from
		/// public Dispose or the C# destructor. DO NOT call directly.
		/// </summary>
		// Token: 0x06009A8C RID: 39564 RVA: 0x000DB0C0 File Offset: 0x000D92C0
		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
		}

		// Token: 0x06009A8D RID: 39565
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_BuildRepresentation_01(HandleRef pThis);

		/// <summary>
		/// Subclasses of vtkPointHandleRepresentation2D must implement these
		/// methods. These are the methods that the widget and its representation
		/// use to communicate with each other.
		/// </summary>
		// Token: 0x06009A8E RID: 39566 RVA: 0x000DB0CB File Offset: 0x000D92CB
		public override void BuildRepresentation()
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_BuildRepresentation_01(base.GetCppThis());
		}

		// Token: 0x06009A8F RID: 39567
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkPointHandleRepresentation2D_ComputeInteractionState_02(HandleRef pThis, int X, int Y, int modify);

		/// <summary>
		/// Subclasses of vtkPointHandleRepresentation2D must implement these
		/// methods. These are the methods that the widget and its representation
		/// use to communicate with each other.
		/// </summary>
		// Token: 0x06009A90 RID: 39568 RVA: 0x000DB0DC File Offset: 0x000D92DC
		public override int ComputeInteractionState(int X, int Y, int modify)
		{
			return vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_ComputeInteractionState_02(base.GetCppThis(), X, Y, modify);
		}

		// Token: 0x06009A91 RID: 39569
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_DeepCopy_03(HandleRef pThis, HandleRef prop);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06009A92 RID: 39570 RVA: 0x000DB100 File Offset: 0x000D9300
		public override void DeepCopy(vtkProp prop)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_DeepCopy_03(base.GetCppThis(), (prop == null) ? default(HandleRef) : prop.GetCppThis());
		}

		// Token: 0x06009A93 RID: 39571
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_GetActors2D_04(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06009A94 RID: 39572 RVA: 0x000DB130 File Offset: 0x000D9330
		public override void GetActors2D(vtkPropCollection arg0)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_GetActors2D_04(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06009A95 RID: 39573
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkPointHandleRepresentation2D_GetBounds_05(HandleRef pThis);

		/// <summary>
		/// Subclasses of vtkPointHandleRepresentation2D must implement these
		/// methods. These are the methods that the widget and its representation
		/// use to communicate with each other.
		/// </summary>
		// Token: 0x06009A96 RID: 39574 RVA: 0x000DB160 File Offset: 0x000D9360
		public override double[] GetBounds()
		{
			IntPtr intPtr = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_GetBounds_05(base.GetCppThis());
			double[] array = null;
			if (IntPtr.Zero != intPtr)
			{
				array = new double[6];
				Marshal.Copy(intPtr, array, 0, array.Length);
			}
			return array;
		}

		// Token: 0x06009A97 RID: 39575
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkPointHandleRepresentation2D_GetCursorShape_06(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Specify the cursor shape with an instance of vtkPolyData. Note that
		/// shape is assumed to be defined in the display coordinate system. By
		/// default a vtkCursor2D shape is used.
		/// </summary>
		// Token: 0x06009A98 RID: 39576 RVA: 0x000DB1A8 File Offset: 0x000D93A8
		public vtkPolyData GetCursorShape()
		{
			vtkPolyData vtkPolyData = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_GetCursorShape_06(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkPolyData = (vtkPolyData)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkPolyData.Register(null);
				}
			}
			return vtkPolyData;
		}

		// Token: 0x06009A99 RID: 39577
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkPointHandleRepresentation2D_GetNumberOfGenerationsFromBase_07(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06009A9A RID: 39578 RVA: 0x000DB218 File Offset: 0x000D9418
		public override long GetNumberOfGenerationsFromBase(string type)
		{
			return vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_GetNumberOfGenerationsFromBase_07(base.GetCppThis(), type);
		}

		// Token: 0x06009A9B RID: 39579
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern long vtkPointHandleRepresentation2D_GetNumberOfGenerationsFromBaseType_08([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06009A9C RID: 39580 RVA: 0x000DB238 File Offset: 0x000D9438
		public new static long GetNumberOfGenerationsFromBaseType(string type)
		{
			return vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_GetNumberOfGenerationsFromBaseType_08(type);
		}

		// Token: 0x06009A9D RID: 39581
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkPointHandleRepresentation2D_GetProperty_09(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Set/Get the handle properties when unselected and selected.
		/// </summary>
		// Token: 0x06009A9E RID: 39582 RVA: 0x000DB254 File Offset: 0x000D9454
		public virtual vtkProperty2D GetProperty()
		{
			vtkProperty2D vtkProperty2D = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_GetProperty_09(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkProperty2D = (vtkProperty2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkProperty2D.Register(null);
				}
			}
			return vtkProperty2D;
		}

		// Token: 0x06009A9F RID: 39583
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkPointHandleRepresentation2D_GetSelectedProperty_10(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Set/Get the handle properties when unselected and selected.
		/// </summary>
		// Token: 0x06009AA0 RID: 39584 RVA: 0x000DB2C4 File Offset: 0x000D94C4
		public virtual vtkProperty2D GetSelectedProperty()
		{
			vtkProperty2D vtkProperty2D = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_GetSelectedProperty_10(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkProperty2D = (vtkProperty2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkProperty2D.Register(null);
				}
			}
			return vtkProperty2D;
		}

		// Token: 0x06009AA1 RID: 39585
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_Highlight_11(HandleRef pThis, int highlight);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06009AA2 RID: 39586 RVA: 0x000DB333 File Offset: 0x000D9533
		public override void Highlight(int highlight)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_Highlight_11(base.GetCppThis(), highlight);
		}

		// Token: 0x06009AA3 RID: 39587
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkPointHandleRepresentation2D_IsA_12(HandleRef pThis, [MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06009AA4 RID: 39588 RVA: 0x000DB344 File Offset: 0x000D9544
		public override int IsA(string type)
		{
			return vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_IsA_12(base.GetCppThis(), type);
		}

		// Token: 0x06009AA5 RID: 39589
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkPointHandleRepresentation2D_IsTypeOf_13([MarshalAs(UnmanagedType.LPUTF8Str)] string type);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06009AA6 RID: 39590 RVA: 0x000DB364 File Offset: 0x000D9564
		public new static int IsTypeOf(string type)
		{
			return vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_IsTypeOf_13(type);
		}

		// Token: 0x06009AA7 RID: 39591
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkPointHandleRepresentation2D_NewInstance_15(HandleRef pThis, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06009AA8 RID: 39592 RVA: 0x000DB380 File Offset: 0x000D9580
		public new vtkPointHandleRepresentation2D NewInstance()
		{
			vtkPointHandleRepresentation2D result = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_NewInstance_15(base.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				result = (vtkPointHandleRepresentation2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
			}
			return result;
		}

		// Token: 0x06009AA9 RID: 39593
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_ReleaseGraphicsResources_16(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06009AAA RID: 39594 RVA: 0x000DB3DC File Offset: 0x000D95DC
		public override void ReleaseGraphicsResources(vtkWindow arg0)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_ReleaseGraphicsResources_16(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06009AAB RID: 39595
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern int vtkPointHandleRepresentation2D_RenderOverlay_17(HandleRef pThis, HandleRef viewport);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06009AAC RID: 39596 RVA: 0x000DB40C File Offset: 0x000D960C
		public override int RenderOverlay(vtkViewport viewport)
		{
			return vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_RenderOverlay_17(base.GetCppThis(), (viewport == null) ? default(HandleRef) : viewport.GetCppThis());
		}

		// Token: 0x06009AAD RID: 39597
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr vtkPointHandleRepresentation2D_SafeDownCast_18(HandleRef o, ref uint mteStatus, ref uint mteIndex, ref uint rawRefCount);

		/// <summary>
		/// Standard methods for instances of this class.
		/// </summary>
		// Token: 0x06009AAE RID: 39598 RVA: 0x000DB440 File Offset: 0x000D9640
		public new static vtkPointHandleRepresentation2D SafeDownCast(vtkObjectBase o)
		{
			vtkPointHandleRepresentation2D vtkPointHandleRepresentation2D = null;
			uint mteStatus = 0U;
			uint maxValue = uint.MaxValue;
			uint rawRefCount = 0U;
			IntPtr intPtr = vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_SafeDownCast_18((o == null) ? default(HandleRef) : o.GetCppThis(), ref mteStatus, ref maxValue, ref rawRefCount);
			if (IntPtr.Zero != intPtr)
			{
				bool flag;
				vtkPointHandleRepresentation2D = (vtkPointHandleRepresentation2D)Methods.CreateWrappedObject(mteStatus, maxValue, rawRefCount, intPtr, true, out flag);
				if (flag)
				{
					vtkPointHandleRepresentation2D.Register(null);
				}
			}
			return vtkPointHandleRepresentation2D;
		}

		// Token: 0x06009AAF RID: 39599
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_SetCursorShape_19(HandleRef pThis, HandleRef cursorShape);

		/// <summary>
		/// Specify the cursor shape with an instance of vtkPolyData. Note that
		/// shape is assumed to be defined in the display coordinate system. By
		/// default a vtkCursor2D shape is used.
		/// </summary>
		// Token: 0x06009AB0 RID: 39600 RVA: 0x000DB4C0 File Offset: 0x000D96C0
		public void SetCursorShape(vtkPolyData cursorShape)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_SetCursorShape_19(base.GetCppThis(), (cursorShape == null) ? default(HandleRef) : cursorShape.GetCppThis());
		}

		// Token: 0x06009AB1 RID: 39601
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_SetDisplayPosition_20(HandleRef pThis, IntPtr xyz);

		/// <summary>
		/// Set/Get the position of the point in display coordinates.  This overloads
		/// the superclasses SetDisplayPosition in order to set the focal point
		/// of the cursor.
		/// </summary>
		// Token: 0x06009AB2 RID: 39602 RVA: 0x000DB4EF File Offset: 0x000D96EF
		public override void SetDisplayPosition(IntPtr xyz)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_SetDisplayPosition_20(base.GetCppThis(), xyz);
		}

		// Token: 0x06009AB3 RID: 39603
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_SetPointPlacer_21(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Override the superclass implementation. This class does not use a
		/// point placer. Point placers dictate the placement of points in 3D
		/// space. Since this class constrains points to lie in an overlay
		/// plane anyway, we don't care. Just returns.
		/// </summary>
		// Token: 0x06009AB4 RID: 39604 RVA: 0x000DB500 File Offset: 0x000D9700
		public override void SetPointPlacer(vtkPointPlacer arg0)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_SetPointPlacer_21(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06009AB5 RID: 39605
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_SetProperty_22(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Set/Get the handle properties when unselected and selected.
		/// </summary>
		// Token: 0x06009AB6 RID: 39606 RVA: 0x000DB530 File Offset: 0x000D9730
		public void SetProperty(vtkProperty2D arg0)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_SetProperty_22(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06009AB7 RID: 39607
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_SetSelectedProperty_23(HandleRef pThis, HandleRef arg0);

		/// <summary>
		/// Set/Get the handle properties when unselected and selected.
		/// </summary>
		// Token: 0x06009AB8 RID: 39608 RVA: 0x000DB560 File Offset: 0x000D9760
		public void SetSelectedProperty(vtkProperty2D arg0)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_SetSelectedProperty_23(base.GetCppThis(), (arg0 == null) ? default(HandleRef) : arg0.GetCppThis());
		}

		// Token: 0x06009AB9 RID: 39609
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_SetVisibility_24(HandleRef pThis, int visible);

		/// <summary>
		/// Override to ensure that the internal actor's visibility is consistent with
		/// this representation's visibility. Inconsistency between the two would cause
		/// issues in picking logic which relies on individual view prop visibility to
		/// determine whether the prop is pickable.
		/// </summary>
		// Token: 0x06009ABA RID: 39610 RVA: 0x000DB58F File Offset: 0x000D978F
		public override void SetVisibility(int visible)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_SetVisibility_24(base.GetCppThis(), visible);
		}

		// Token: 0x06009ABB RID: 39611
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_ShallowCopy_25(HandleRef pThis, HandleRef prop);

		/// <summary>
		/// Methods to make this class behave as a vtkProp.
		/// </summary>
		// Token: 0x06009ABC RID: 39612 RVA: 0x000DB5A0 File Offset: 0x000D97A0
		public override void ShallowCopy(vtkProp prop)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_ShallowCopy_25(base.GetCppThis(), (prop == null) ? default(HandleRef) : prop.GetCppThis());
		}

		// Token: 0x06009ABD RID: 39613
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_StartWidgetInteraction_26(HandleRef pThis, IntPtr eventPos);

		/// <summary>
		/// Subclasses of vtkPointHandleRepresentation2D must implement these
		/// methods. These are the methods that the widget and its representation
		/// use to communicate with each other.
		/// </summary>
		// Token: 0x06009ABE RID: 39614 RVA: 0x000DB5CF File Offset: 0x000D97CF
		public override void StartWidgetInteraction(IntPtr eventPos)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_StartWidgetInteraction_26(base.GetCppThis(), eventPos);
		}

		// Token: 0x06009ABF RID: 39615
		[DllImport("Kitware.VTK.InteractionWidgets.Unmanaged.dll", CallingConvention = CallingConvention.Cdecl)]
		internal static extern void vtkPointHandleRepresentation2D_WidgetInteraction_27(HandleRef pThis, IntPtr eventPos);

		/// <summary>
		/// Subclasses of vtkPointHandleRepresentation2D must implement these
		/// methods. These are the methods that the widget and its representation
		/// use to communicate with each other.
		/// </summary>
		// Token: 0x06009AC0 RID: 39616 RVA: 0x000DB5DF File Offset: 0x000D97DF
		public override void WidgetInteraction(IntPtr eventPos)
		{
			vtkPointHandleRepresentation2D.vtkPointHandleRepresentation2D_WidgetInteraction_27(base.GetCppThis(), eventPos);
		}

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x04000C99 RID: 3225
		public new const string MRFullTypeName = "Kitware.VTK.vtkPointHandleRepresentation2D";

		/// <summary>
		/// Automatically generated type registration mechanics.
		/// </summary>
		// Token: 0x04000C9A RID: 3226
		public new static readonly string MRClassNameKey = "class vtkPointHandleRepresentation2D";
	}
}
